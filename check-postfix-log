#!/usr/bin/python3
# -*- coding: utf-8 -*-
#
# Author: Frank Brehm <frank@brehm-online.com
#         Berlin, Germany, 2023
# Date:   2023-02-16
#
# This module provides a monitoring plugin for checking Postfix logfiles
#
from __future__ import print_function

import logging

# Own modules

from monitoring import MonitoringPlugin

__version__ = '0.2.0'

LOG = logging.getLogger(__name__)


# =============================================================================
class CheckPostfixLogPlugin(MonitoringPlugin):
    """Application class for this plugin."""

    # -------------------------------------------------------------------------
    def __init__(self):
        """Constructor."""

        desc = (
            "Analyzes the entries of the Postfix logfile since the last execution "
            "of this plugin, generates metrics (performance data) of them and emits "
            "warnings and critical errors on appropriate logfile entries."
        )

        super(CheckPostfixLogPlugin, self).__init__(version=__version__, description=desc)

    # -------------------------------------------------------------------------
    def post_init(self):
        """Post initialization tasks."""
        super(CheckPostfixLogPlugin, self).post_init()
        self.initialized = True

    # -------------------------------------------------------------------------
    def run(self):
        """Execute the main actions of the application."""
        LOG.debug("I'm walking, yes indeed, I'm walking....")


# =============================================================================

if __name__ == "__main__":
    plugin = CheckPostfixLogPlugin()
    plugin()

# =============================================================================

# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4
